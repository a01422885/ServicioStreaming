TYPECAST, HERENCIA, POLIMORFISMO Y VECTOREES.
En este proyecto se buscó integrar los conocimientos aprendidos durante el curso tales como la correcta implementación de clases,  concepto de Herencia, la implementación correcta de modificadores de acceso, sobrecarga y sobreescritura de métodos, polimorfismo y clases abstractas. De tal modo que como proyecto final de la materia se realizó una aplicación integrando estos conceptos, la cual consistió en la simulación de una base datos de un servicio de streaming integrado principalmente por películas y series con, tanto atributos en común, como únicos para cada una. 
La plataforma construida debía realizar ciertas acciones, específicas para películas o episodios, o también para todo el contenido general del servicio, requiriendo así de la correcta implementación de clases
Por lo tanto se debió implementar una clase padre (en mi caso la clase Multimedia) la cual debió heredar atributos básicos que debían tener en común el resto de sus clases hijas (Película y Episodio). Asimismo se debió crear una lista de objetos del tipo Padre, donde se almacenaron las películas y los episodios instanciados. En consecuencia se debió crear un menú, funcionaba  como una plataforma de interacción con el usuario a través de la consola del IDE. En el menú de opciones, es posible elegir hacer ciertas acciones  las cuales consisten en llamar a funciones específicas y particulares de cada objeto dependiendo de la instrucción seleccionada. Uno de lo métodos ocupados con mayor relevancia en esta sección, fue la función de sobreescritura mostrarAtributos(), donde se implementó el polimorfismo, ya que para cada diferente clase de objeto, está tenía un diferente funcionamiento.
El programa se ejecuta eligiendo alguna de las opciones del menú en consola y las entradas son validadas, en caso de rechazar las entradas, teniendo en cuenta que el menú es ciclado, el usuario puede volver a ingresar su entrada las veces que quiera mientras no elija opción de salir.

